nohup: ignoring input
/home/satbigvm/anaconda3/lib/python3.6/site-packages/numpy/lib/function_base.py:356: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)
/home/satbigvm/anaconda3/lib/python3.6/site-packages/numpy/core/_methods.py:85: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
========================================
Counter({1: 12291, 0: 7709})
Counter({0: 10000, 1: 10000})
====================
class 0  accuracy_score:  0.7220132312881048
====================
====================
class 1  accuracy_score:  0.6392482304124969
====================
====================
class 2  accuracy_score:  nan
====================
f1_weighted 0.6667775541998886
f1_macro 0.6667775541998886
f1_micro 0.67115
========================================
Counter({1: 12666, 0: 7334})
Counter({0: 10000, 1: 10000})
====================
class 0  accuracy_score:  0.7692937005726752
====================
====================
class 1  accuracy_score:  0.655929259434707
====================
====================
class 2  accuracy_score:  nan
====================
f1_weighted 0.6920276736093199
f1_macro 0.6920276736093199
f1_micro 0.6975
========================================
Counter({1: 12151, 0: 7849})
Counter({0: 10000, 1: 10000})
====================
class 0  accuracy_score:  0.7454452796534591
====================
====================
class 1  accuracy_score:  0.6585466216772282
====================
====================
class 2  accuracy_score:  nan
====================
f1_weighted 0.6890532784949848
f1_macro 0.6890532784949848
f1_micro 0.69265
========================================
Counter({0: 13146, 1: 6854})
Counter({0: 10000, 1: 10000})
====================
class 0  accuracy_score:  0.6062680663319641
====================
====================
class 1  accuracy_score:  0.7038225853516195
====================
====================
class 2  accuracy_score:  nan
====================
f1_weighted 0.6305588094851456
f1_macro 0.6305588094851458
f1_micro 0.6397
========================================
Counter({1: 10776, 0: 9224})
Counter({0: 10000, 1: 10000})
====================
class 0  accuracy_score:  0.7574804856895057
====================
====================
class 1  accuracy_score:  0.7203971789161099
====================
====================
class 2  accuracy_score:  nan
====================
f1_weighted 0.7371042261862699
f1_macro 0.7371042261862699
f1_micro 0.7375
========================================
Counter({0: 13004, 1: 6996})
Counter({0: 10000, 1: 10000})
====================
class 0  accuracy_score:  0.6481851737926791
====================
====================
class 1  accuracy_score:  0.7754431103487708
====================
====================
class 2  accuracy_score:  nan
====================
f1_weighted 0.6856072878379149
f1_macro 0.6856072878379149
f1_micro 0.6927
========================================
Counter({1: 10132, 0: 9868})
Counter({0: 10000, 1: 10000})
====================
class 0  accuracy_score:  0.7650993109039319
====================
====================
class 1  accuracy_score:  0.7581918673509672
====================
====================
class 2  accuracy_score:  nan
====================
f1_weighted 0.7615896148436225
f1_macro 0.7615896148436225
f1_micro 0.7616
========================================
Counter({1: 13768, 0: 6232})
Counter({0: 10000, 1: 10000})
====================
class 0  accuracy_score:  0.8156290115532734
====================
====================
class 1  accuracy_score:  0.6428675188843695
====================
====================
class 2  accuracy_score:  nan
====================
f1_weighted 0.6855383210695006
f1_macro 0.6855383210695007
f1_micro 0.6967
========================================
Counter({1: 10411, 0: 9589})
Counter({0: 10000, 1: 10000})
====================
class 0  accuracy_score:  0.7527375117321932
====================
====================
class 1  accuracy_score:  0.7327826337527615
====================
====================
class 2  accuracy_score:  nan
====================
f1_weighted 0.7422411477923155
f1_macro 0.7422411477923156
f1_micro 0.74235
========================================
Counter({1: 12560, 0: 7440})
Counter({0: 10000, 1: 10000})
====================
class 0  accuracy_score:  0.8146505376344086
====================
====================
class 1  accuracy_score:  0.6863853503184714
====================
====================
class 2  accuracy_score:  nan
====================
f1_weighted 0.7296709284924198
f1_macro 0.7296709284924199
f1_micro 0.7341
========================================
Counter({0: 11742, 1: 8258})
Counter({0: 10000, 1: 10000})
====================
class 0  accuracy_score:  0.7070345767330949
====================
====================
class 1  accuracy_score:  0.7943812061031726
====================
====================
class 2  accuracy_score:  nan
====================
f1_weighted 0.7411361527203593
f1_macro 0.7411361527203593
f1_micro 0.7431
========================================
Counter({1: 11495, 0: 8505})
Counter({0: 10000, 1: 10000})
====================
class 0  accuracy_score:  0.7833039388594945
====================
====================
class 1  accuracy_score:  0.7096128751631144
====================
====================
class 2  accuracy_score:  nan
====================
f1_weighted 0.7394944087271635
f1_macro 0.7394944087271635
f1_micro 0.7409499999999999
========================================
Counter({1: 10595, 0: 9405})
Counter({0: 10000, 1: 10000})
====================
class 0  accuracy_score:  0.7909622541201489
====================
====================
class 1  accuracy_score:  0.758282208588957
====================
====================
class 2  accuracy_score:  nan
====================
f1_weighted 0.7734494886380376
f1_macro 0.7734494886380376
f1_micro 0.77365
========================================
Counter({0: 10071, 1: 9929})
Counter({0: 10000, 1: 10000})
====================
class 0  accuracy_score:  0.763777182007745
====================
====================
class 1  accuracy_score:  0.7675496021754457
====================
====================
class 2  accuracy_score:  nan
====================
f1_weighted 0.7656470465669044
f1_macro 0.7656470465669043
f1_micro 0.76565
========================================
Counter({1: 12353, 0: 7647})
Counter({0: 10000, 1: 10000})
====================
class 0  accuracy_score:  0.7844906499280764
====================
====================
class 1  accuracy_score:  0.6761110661377803
====================
====================
class 2  accuracy_score:  nan
====================
f1_weighted 0.7135855884786023
f1_macro 0.7135855884786023
f1_micro 0.71755
========================================
Counter({0: 10008, 1: 9992})
Counter({0: 10000, 1: 10000})
====================
class 0  accuracy_score:  0.7586930455635491
====================
====================
class 1  accuracy_score:  0.7591072858286629
====================
====================
class 2  accuracy_score:  nan
====================
f1_weighted 0.7588999614239937
f1_macro 0.7588999614239937
f1_micro 0.7589000000000001
========================================
Counter({1: 10863, 0: 9137})
Counter({0: 10000, 1: 10000})
====================
class 0  accuracy_score:  0.7801247674291343
====================
====================
class 1  accuracy_score:  0.7356163122526006
====================
====================
class 2  accuracy_score:  nan
====================
f1_weighted 0.7554947501739809
f1_macro 0.7554947501739808
f1_micro 0.7559499999999999
========================================
Traceback (most recent call last):
  File "testResnet18.py", line 69, in <module>
    state_dict = torch.load(file_name)
  File "/home/satbigvm/anaconda3/lib/python3.6/site-packages/torch/serialization.py", line 366, in load
    f = open(f, 'rb')
FileNotFoundError: [Errno 2] No such file or directory: 'splitData/train_checkpoints/epoch_17.ckpt'
